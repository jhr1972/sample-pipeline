kind: ConfigMap
metadata:
  name: sgsecret
  namespace: sample-pipeline
apiVersion: v1
data:
  secret.j2: "\n---\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  annotations:\n
    \   managed-by: argocd.argoproj.io\n  labels:\n    source-secret: {{ .SaName }}\n
    \   source-namespace: {{ .SaNamespace }}\n    argocd.argoproj.io/secret-type:
    cluster\n  name: {{ .ArgoRef }}\n  namespace: {{ .ArgoNs}}\ndata:\n  name: {{
    .ArgoRefB64  }}\n  server: {{ .UrlRefB64 }}\n  config: {{   .ConfigB64   }}\n
    \  "



---


kind: ConfigMap
metadata:
  name: sgconfig
  namespace: sample-pipeline
apiVersion: v1
data:
  config.yaml: |-
    ---
    leafclusters:
      - name: aws-e
        sa-name: deployer-token-v9vs7
        #sa-namespace: openshift-gitops
        sa-namespace: hlb-gitops
        argo-ns: argocd
        argo-ref: entwicklung
        url: https://192.168.100.29:6443
 



---

kind: ConfigMap
metadata:
  name: context
  namespace: sample-pipeline
apiVersion: v1
data:
  context.j2: |-
     ---
     apiVersion: v1
     kind: Config
     clusters:
     - name: {{ name | default("ERROR") }}
       cluster:
         #certificate-authority-data:  {{ ca | default("ERROR")}}
         insecure-skip-tls-verify: true
         server: {{ url | default("ERROR") }}
     contexts:
     - name: {{ name | default("ERROR") }}
       context:
         cluster: {{ name | default("ERROR") }}
         namespace: default
         user: {{ name | default("ERROR") }}-user
     current-context: {{ name | default("ERROR") }}
     users:
     - name: {{ name | default("ERROR") }}-user
       user:
         token: {{ token | default("ERROR") }}

---

kind: ConfigMap
metadata:
  name: secretstore
  namespace: sample-pipeline
apiVersion: v1
data:
  secretstore.j2: |-
     apiVersion: external-secrets.io/v1beta1
     kind: SecretStore
     metadata:
       name: eso
       namespace: {{ remoteNamespace }}
       
     spec:
       provider:
         kubernetes:
           auth:
             token:
               bearerToken:
                 key: token
                 name: eso-token
           remoteNamespace: {{ centralNamespace }}
           server:
             caProvider:
               key: ca.crt
               name: central-ca
               type: ConfigMap
             url: '{{ centralUrl }}'